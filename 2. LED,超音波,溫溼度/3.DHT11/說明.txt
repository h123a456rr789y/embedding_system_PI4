for i in range(len(data)):

    current = data[i]
    current_length += 1

    # initial = state = STATE_INIT_PULL_DOWN
    # initial -> 0: 改成STATE_INIT_PULL_UP
    # initial -> 1: 略過
    if state == STATE_INIT_PULL_DOWN:
        # now: 0
        if current == RPi.GPIO.LOW:
            state = STATE_INIT_PULL_UP
            continue
        else:
            continue

    # 第一次紀錄bit
    # 0 -> 1: 改成STATE_DATA_FIRST_PULL_DOWN
    # 0 -> 0: 略過, 維持STATE_INIT_PULL_UP
    if state == STATE_INIT_PULL_UP:
        # now: 1
        if current == RPi.GPIO.HIGH:
            # ok, we got the initial pull up
            state = STATE_DATA_FIRST_PULL_DOWN
            continue
        else:
            continue

    # 1 -> 0: 改成STATE_DATA_PULL_UP
    # 1 -> 1: 略過, 維持STATE_DATA_FIRST_PULL_DOWN
    if state == STATE_DATA_FIRST_PULL_DOWN:
        # now: 0
        if current == RPi.GPIO.LOW:
            # we have the initial pull down, the next will be the data pull up
            state = STATE_DATA_PULL_UP
            continue
        else:
            continue

    # 之前有記錄到其他bit
    # 0 -> 1: 改成STATE_DATA_PULL_DOWN, 把current_length設為0 
    # 0 -> 0: 略過, 維持STATE_DATA_PULL_UP
    if state == STATE_DATA_PULL_UP:
        # now: 1
        if current == RPi.GPIO.HIGH:
            # data pulled up, the length of this pull up will determine whether it is 0 or 1
            current_length = 0
            state = STATE_DATA_PULL_DOWN
            continue
        else:
            continue

    # 1 -> 0: 改成STATE_DATA_PULL_UP
    # 1 -> 1: 略過, 維持STATE_DATA_PULL_DOWN
    if state == STATE_DATA_PULL_DOWN:
        # now: 0
        if current == RPi.GPIO.LOW:
            # pulled down, we store the length of the previous pull up period
            lengths.append(current_length)
            state = STATE_DATA_PULL_UP
            continue
        else:
            continue
